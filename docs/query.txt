1. User Uploads:

User interacts with a web form (HTML) to upload a photo and provide information (name, email, etc.).

2. Go/Fiber Backend API:
Receives the photo and user information.
Resizes the photo (if needed).
Generates a presigned URL for S3 upload.
Uploads the resized photo to Amazon S3.
Updates DynamoDB with initial order information (including S3 location).
Sends a print job request to Amazon SQS.

3. Amazon S3 (Processed Photos):

Stores the resized/edited photos.
4. Amazon DynamoDB:

Stores customer information and photo status.
5. Amazon SQS (Queue):

Holds print job requests.
6. AWS Lambda (Print Service):

Trigger: Triggered by messages in the SQS queue.
Processing:
Polls/receives a message from SQS.
Simulates printing the photo (e.g., a delay).
Updates DynamoDB to mark the photo as "printed."
Publishes a notification message to Amazon SNS.
7. Amazon SNS (Topic):

Receives the notification message from the Lambda function.
Forwards the message to the subscribed email address via SES.
8. Amazon SES (Email Service):

Sends an email notification to the customer.
9. Customer Receives Email:

Customer receives an email confirming that their photo has been printed.
10. Customer Picks Up Photos:

Customer retrieves their printed photos.
----
graph LR
    A[User Uploads (HTML Form)] --> B{Go/Fiber Backend API}
    B -- Resizes photo --> C[Amazon S3 (Processed Photos)]
    B -- Generates presigned URL --> C
    B -- Uploads to S3 --> C
    B -- Updates DynamoDB --> D[Amazon DynamoDB]
    B -- Sends print job to SQS --> E[Amazon SQS (Queue)]
    C --> F{AWS Lambda (Print Service)}
    D --> F
    E --> F
    F -- Polls SQS --> E
    F -- Simulates printing --> G[DynamoDB Update: "Printed"]
    F -- Sends SNS Notification --> H[Amazon SNS (Topic)]
    G --> I[Customer Picks Up Photos]
    H -- Forwards message --> J[Amazon SES (Email Service)]
    J -- Sends email --> K[Customer Receives Email]

---> 
Explanation of Diagram Elements:

Rectangles: Represent processes or services (e.g., "Go/Fiber Backend API," "AWS Lambda").
Cylinders: Represent data stores (e.g., "Amazon S3," "Amazon DynamoDB").
Arrows: Show the flow of data or events.
Dashed Arrows: Indicate asynchronous communication or events triggered by messages (e.g., Lambda triggered by SQS).
Diamond: Represents a process with multiple outputs.
Workflow in the Diagram:

The user uploads a photo via an HTML form.
The Go/Fiber backend API handles the upload, resizing, and storage in S3. It also updates DynamoDB and sends a print job request to SQS.
S3 stores the processed photos.
DynamoDB stores user information and photo status.
SQS holds the print job requests.
The AWS Lambda function is triggered by messages in the SQS queue.
Lambda processes the print job (simulates printing), updates DynamoDB, and sends a notification to SNS.
DynamoDB is updated with the "printed" status.
SNS receives the notification and forwards it to SES.
SES sends an email to the customer.
The customer receives the email.
The customer picks up their photos.

----

+-----------------------------+
|        User Uploads         |
|  (HTML Form: Photo + Info)  |
+------------+----------------+
             |
             v
+------------+----------------+
|   Go/Fiber Backend API      |
|  - Resizes photo            |
|  - Generates presigned URL  |
|  - Uploads to S3            |
|  - Updates DynamoDB         |
+------------+----------------+
             |
             v
+------------+----------------+
|  Amazon S3 (Processed Photos) |
|  - Stores edited photos       |
+------------+----------------+
             |
             v
+------------+----------------+
|   Amazon DynamoDB            |
|  - Stores customer info      |
|  - Tracks photo status       |
+------------+----------------+
             |
             v
+------------+----------------+
|  Send Print Job to SQS       |
|  - Backend enqueues job      |
+------------+----------------+
             |
             v
+------------+----------------+
|  Amazon SQS (Queue)          |
|  - Holds print job request   |
+------------+----------------+
             |
             v
+------------+----------------+
|   AWS Lambda (Print Service) |
|  - Polls SQS for print jobs  |
|  - Simulates printing (5s)   |
|  - Updates DynamoDB status   |
+------------+----------------+
             |
             v
+------------+----------------+
|   DynamoDB Update: "Printed" |
|  - Confirms print completion |
+------------+----------------+
             |
             v
+-----------------------------+
|  Customer Picks Up Photos   |
|  - No email/SNS needed      |
+-------------+---------------+
              |
              v
+-------------+----------------+
|   AWS Lambda (Print Service) |
|  - Polls SQS for print jobs  |
|  - Simulates printing (5s)   |
|  - Updates DynamoDB status   |
|  - Sends SNS Notification    |  <-- New step!
+------------+----------------+
             |
             v
+------------+----------------+
|  Amazon SNS (Topic)          |
|  - Receives notification     |
+------------+----------------+
             |
             v
+------------+----------------+
|  Amazon SES (Email Service)  |
|  - Sends email to customer  |
+------------+----------------+
             |
             v
+-----------------------------+
|  Customer Receives Email    |
+-----------------------------+
